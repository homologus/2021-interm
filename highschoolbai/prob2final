seq = ''
count = 0
validproteins = []
proteinpos = []
proteinend = []

def end(x):
    return len(x) + q

with open('/share/SARS-class/SARS-2020.fasta', 'r') as f:
    lines = f.readlines()[1:]

for x in lines:
    seq += x.strip()

N = len(seq)

translation = {'ATA': 'I', 'ATC': 'I', 'ATT': 'I', 'ATG': 'M',
               'ACA': 'T', 'ACC': 'T', 'ACG': 'T', 'ACT': 'T',
               'AAC': 'N', 'AAT': 'N', 'AAA': 'K', 'AAG': 'K',
               'AGC': 'S', 'AGT': 'S', 'AGA': 'R', 'AGG': 'R',
               'CTA': 'L', 'CTC': 'L', 'CTG': 'L', 'CTT': 'L',
               'CCA': 'P', 'CCC': 'P', 'CCG': 'P', 'CCT': 'P',
               'CAC': 'H', 'CAT': 'H', 'CAA': 'Q', 'CAG': 'Q',
               'CGA': 'R', 'CGC': 'R', 'CGG': 'R', 'CGT': 'R',
               'GTA': 'V', 'GTC': 'V', 'GTG': 'V', 'GTT': 'V',
               'GCA': 'A', 'GCC': 'A', 'GCG': 'A', 'GCT': 'A',
               'GAC': 'D', 'GAT': 'D', 'GAA': 'E', 'GAG': 'E',
               'GGA': 'G', 'GGC': 'G', 'GGG': 'G', 'GGT': 'G',
               'TCA': 'S', 'TCC': 'S', 'TCG': 'S', 'TCT': 'S',
               'TTC': 'F', 'TTT': 'F', 'TTA': 'L', 'TTG': 'L',
               'TAC': 'Y', 'TAT': 'Y', 'TAA': '_', 'TAG': '_',
               'TGC': 'C', 'TGT': 'C', 'TGA': '_', 'TGG': 'W',
               }

for a in range(0,3):
    protein = ''
    print("reading frame:", a)
    for i in range(a,N-3,3):
        seq1 = seq[i:i+3]
        protein += translation[seq1]
    aachain = protein.split('_')
    for unit in aachain:
        if len(unit)>100:
            validproteins.append(unit)
            q = protein.index(unit)
            proteinpos.append(q)
            proteinend.append(end(unit))

print(validproteins)
print("total:", len(validproteins))
print(proteinpos)
print(proteinend)
